# Build documentation GitHub Action
# This action uses docc to build the documentation
#
# Made by: Wesley de Groot 
# Email: email+gha@wesleydegroot.nl

name: 'Build documentation'
description: 'Build documentation using Swifts docc'
author: 'Wesley de Groot <email+gha@wesleydegroot.nl>'

inputs:
  branch:
    description: 'Branch to push to'
    required: false
    default: 'documentation'
  product:
    description: 'product name'
    required: false
    default: '__AUTO__'
  iOS:
    description: 'Build for iOS?'
    required: true
    default: false
  temppath:
    description: 'Temporarly file path'
    required: false
    default: 'tmpdocs'

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Create folder for generated documentation
      shell: bash
      run: |
        mkdir ${{ inputs.temppath }}

    - name: Add docc plugin to Package.swift
      shell: bash
      run: |
        echo "package.dependencies.append(" >> package.swift
        echo "  .package(url: \"https://github.com/apple/swift-docc-plugin\", from: \"1.0.0\")" >> package.swift
        echo ")" >> Package.swift
       
    - name: Build Documentation (SPM)
      shell: bash
      if: ${{ github.event.inputs.iOS == false }}
      run: |
        if [[ "${{ github.event.inputs.product }}" -eq "__AUTO__" ]]
        then
          # Automatically get package name
          PRODUCT_NAME=`cat Package.swift | grep -m1 "name" | awk -F'"' '{print $2}'`
        else
          # Use provided product name
          PRODUCT_NAME="${{ github.event.inputs.product }}"
        fi
        echo "$PRODUCT_NAME"
        
        swift package --allow-writing-to-directory ${{ inputs.temppath }} \
        generate-documentation \
        --target $PRODUCT_NAME \
        --disable-indexing \
        --output-path ${{ inputs.temppath }} \
        --transform-for-static-hosting \
        --hosting-base-path `basename ${{ github.repository }}`

    - name: Build Documentation (iOS)
      shell: bash
      if: ${{ github.event.inputs.iOS == true }}
      run: |
        if [[ "${{ github.event.inputs.product }}" -eq "__AUTO__" ]]
        then
          # Automatically get package name
          PRODUCT_NAME=`cat Package.swift | grep -m1 "name" | awk -F'"' '{print $2}'`
        else
          # Use provided product name
          PRODUCT_NAME="${{ github.event.inputs.product }}"
        fi

        xcodebuild docbuild -scheme $PRODUCT_NAME \
        -destination generic/platform=iOS \
        OTHER_DOCC_FLAGS="--transform-for-static-hosting --hosting-base-path `basename ${{ github.repository }}` --output-path ${{ inputs.temppath }}"

    - name: Init new repo in and add required files
      shell: bash
      run: |
        cd ${{ inputs.temppath }}
        git init -b ${{ inputs.branch }}
        DOCURL=`basename ${{ github.repository }}`
        echo "{\"meta\":{\"title\":\"$DOCURL Documentation\"}}" > theme-settings.json
        DOCURL=${DOCURL//-/_}
        echo "<script>window.location.href = 'documentation/$DOCURL/'.toLowerCase();</script>" > index.html
        echo "<script>window.location.href = 'documentation/$DOCURL/'.toLowerCase();</script>" > 404.html
        git add -A .
        git config user.name github-actions
        git config user.email github-actions@github.com
        git commit -m 'deploy'
        git push \
        "https://${{ github.repository_owner }}:${{ github.token }}@github.com/${{ github.repository }}.git" \
        HEAD:${{ inputs.branch }} \
        --force

branding:
  icon: "upload-cloud"
  color: "blue"
